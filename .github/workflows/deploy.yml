name: CI/CD with AWS SSM

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker containers
        run: docker-compose build

      - name: Run Django tests
        run: docker-compose run --rm web python manage.py test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2 via SSM
        id: deploy_ssm
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Django Docker App" \
            --parameters commands='[
              "cd /home/ec2-user/awsdjangotest",
              "git pull origin main",
              "docker-compose down",
              "docker-compose up -d --build"
            ]' \
            --output json > result.json
          COMMAND_ID=$(jq -r '.Command.CommandId' result.json)
          echo "Command ID: $COMMAND_ID"

      - name: Wait for deployment command to complete
        run: |
          COMMAND_ID=${{ steps.deploy_ssm.outputs.command_id }}
          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id ${{ secrets.EC2_INSTANCE_ID }}

