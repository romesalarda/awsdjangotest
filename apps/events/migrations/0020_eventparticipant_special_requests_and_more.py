# Generated by Django 5.1.5 on 2025-09-28 19:50

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("events", "0019_eventparticipant_news_letter_consent_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="eventparticipant",
            name="special_requests",
            field=models.TextField(
                blank=True, null=True, verbose_name="special requests"
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="event_payment_tracking_number",
            field=models.CharField(
                blank=True,
                help_text="Unique identifier for this payment (e.g., UUID or custom format)",
                max_length=100,
                null=True,
                unique=True,
                verbose_name="payment tracking number",
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="paid_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="verified",
            field=models.BooleanField(
                default=False,
                help_text="Set to true when payment is verified/confirmed",
                verbose_name="payment verified",
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="description",
            field=models.TextField(
                blank=True,
                max_length=500,
                null=True,
                verbose_name="resource description",
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="expiry_date",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="resource expiry date"
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="release_date",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="resource release date"
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="word_descriptor",
            field=models.TextField(
                blank=True,
                help_text="A word I.e. schedule or map",
                max_length=100,
                null=True,
                verbose_name="word description",
            ),
        ),
        migrations.CreateModel(
            name="ParticipantQuestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question_subject", models.CharField(max_length=255)),
                ("question", models.TextField(max_length=1000)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ANSWERED", "Answered"),
                            ("CLOSED", "Closed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True, help_text="Internal notes for admins", null=True
                    ),
                ),
                (
                    "answer",
                    models.TextField(
                        blank=True, help_text="Answer provided by admin", null=True
                    ),
                ),
                (
                    "questions_type",
                    models.CharField(
                        choices=[
                            ("GENERAL", "General"),
                            ("CHANGE_REQUEST", "Change request"),
                            ("OTHER", "Other"),
                        ],
                        default="GENERAL",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participant_questions",
                        to="events.event",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participant_questions",
                        to="events.eventparticipant",
                    ),
                ),
            ],
        ),
    ]
