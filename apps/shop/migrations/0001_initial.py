# Generated by Django 5.1.5 on 2025-09-15 19:15

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("events", "0007_alter_eventdayattendance_check_in_time_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(verbose_name="name of category")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="category description",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product categories",
            },
        ),
        migrations.CreateModel(
            name="ProductMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(verbose_name="name of material")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="material description",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product materials",
            },
        ),
        migrations.CreateModel(
            name="ProductPaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("STRIPE", "Stripe"),
                            ("BANK", "Bank Transfer"),
                            ("CASH", "Cash / In-Person"),
                            ("PAYPAL", "PayPal"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                        verbose_name="payment method",
                    ),
                ),
                (
                    "account_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="account name",
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="account number",
                    ),
                ),
                (
                    "sort_code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="sort code"
                    ),
                ),
                (
                    "iban",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="IBAN"
                    ),
                ),
                (
                    "swift_bic",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="SWIFT/BIC"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        help_text="E.g., 'Reference your full name when making the transfer'",
                        null=True,
                        verbose_name="payment instructions",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product Payment Method",
                "verbose_name_plural": "Product Payment Methods",
            },
        ),
        migrations.CreateModel(
            name="EventCart",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Cart UUID",
                    ),
                ),
                ("total", models.FloatField(default=0, verbose_name="Total Cost")),
                (
                    "shipping_cost",
                    models.FloatField(default=0, verbose_name="Shipping Cost"),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Created At"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Last Updated"),
                ),
                (
                    "approved",
                    models.BooleanField(
                        default=False, help_text="Flags if the cart has been approved"
                    ),
                ),
                (
                    "submitted",
                    models.BooleanField(
                        default=False, help_text="Flags if the cart has been submitted"
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True, help_text="Flags if the cart is active"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Cart Notes"),
                ),
                (
                    "shipping_address",
                    models.TextField(
                        blank=True, null=True, verbose_name="Shipping Address"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to="events.event",
                        verbose_name="Event",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Cart",
                "verbose_name_plural": "Event Carts",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="EventProduct",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Product UUID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Product Name"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=400, verbose_name="Product Description"
                    ),
                ),
                (
                    "extra_info",
                    models.TextField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="Additional Product Information",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("XS", "Extra Small"),
                            ("SM", "Small"),
                            ("MD", "Medium"),
                            ("LG", "Large"),
                            ("XL", "Extra Large"),
                        ],
                        default="MD",
                        max_length=5,
                        null=True,
                        verbose_name="Size",
                    ),
                ),
                ("price", models.FloatField(verbose_name="Product Cost (Â£)")),
                (
                    "discount",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Product Discount (Â£)"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="events.event",
                        verbose_name="Event Associated With This Product",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Seller That Has Created This Product",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, to="shop.productcategory", verbose_name="Categories"
                    ),
                ),
                (
                    "materials",
                    models.ManyToManyField(
                        blank=True, to="shop.productmaterial", verbose_name="Materials"
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="EventProductOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "added",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date Added to Cart",
                    ),
                ),
                (
                    "price_at_purchase",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Price at Purchase (Â£)"
                    ),
                ),
                (
                    "discount_applied",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Discount Applied (Â£)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("purchased", "Purchased"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Order Status",
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="shop.eventcart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="shop.eventproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Product Order",
                "verbose_name_plural": "Event Product Orders",
                "ordering": ["-added"],
            },
        ),
        migrations.AddField(
            model_name="eventcart",
            name="products",
            field=models.ManyToManyField(
                related_name="carts",
                through="shop.EventProductOrder",
                to="shop.eventproduct",
                verbose_name="Products",
            ),
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="product image uuid",
                    ),
                ),
                ("image", models.ImageField(upload_to="event-product-images/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="shop.eventproduct",
                        verbose_name="product linked to",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductPaymentPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="package name")),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="package description"
                    ),
                ),
                (
                    "price",
                    models.IntegerField(
                        help_text="Store in smallest currency unit (e.g., pence for GBP, cents for USD)",
                        verbose_name="price (in pence)",
                    ),
                ),
                ("currency", models.CharField(default="gbp", max_length=10)),
                (
                    "available_from",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="available from"
                    ),
                ),
                (
                    "available_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="available until"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_payment_packages",
                        to="events.event",
                        verbose_name="event",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        blank=True,
                        to="shop.eventproduct",
                        verbose_name="products in package",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Payment Package",
                "verbose_name_plural": "Product Payment Packages",
            },
        ),
        migrations.CreateModel(
            name="ProductPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stripe_payment_intent",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("amount", models.IntegerField(help_text="Amount in pence")),
                ("currency", models.CharField(default="gbp", max_length=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SUCCEEDED", "Succeeded"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cart",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product_payments",
                        to="shop.eventcart",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="shop.productpaymentmethod",
                        verbose_name="payment method",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="shop.productpaymentpackage",
                        verbose_name="selected package",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Payment",
                "verbose_name_plural": "Product Payments",
            },
        ),
    ]
