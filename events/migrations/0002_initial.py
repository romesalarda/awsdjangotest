# Generated by Django 5.1.5 on 2025-09-09 09:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("events", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="event",
            name="supervising_chapter_CFC_coordinator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="cfc_supervised_events",
                to=settings.AUTH_USER_MODEL,
                verbose_name="youth CFC coordinator supervisor",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="supervising_chapter_youth_head",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="supervised_events",
                to=settings.AUTH_USER_MODEL,
                verbose_name="youth chapter head supervisor",
            ),
        ),
        migrations.AddField(
            model_name="eventparticipant",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participants",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="eventparticipant",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_participations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="event_payments",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="events.eventparticipant",
            ),
        ),
        migrations.AddField(
            model_name="eventpaymentmethod",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payment_methods",
                to="events.event",
                verbose_name="event",
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="method",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="payments",
                to="events.eventpaymentmethod",
                verbose_name="payment method",
            ),
        ),
        migrations.AddField(
            model_name="eventpaymentpackage",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payment_packages",
                to="events.event",
                verbose_name="event",
            ),
        ),
        migrations.AddField(
            model_name="eventpayment",
            name="package",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="payments",
                to="events.eventpaymentpackage",
                verbose_name="selected package",
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="added_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="resource added by",
            ),
        ),
        migrations.AddField(
            model_name="eventresource",
            name="chapter_ownership",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.chapterlocation",
                verbose_name="chapter that owns resource",
            ),
        ),
        migrations.AddField(
            model_name="eventpaymentpackage",
            name="resources",
            field=models.ManyToManyField(
                blank=True,
                to="events.eventresource",
                verbose_name="related package resources",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="memo",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="event_memos",
                to="events.eventresource",
                verbose_name="main event memo",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="resources",
            field=models.ManyToManyField(
                blank=True, related_name="event_resources", to="events.eventresource"
            ),
        ),
        migrations.AddField(
            model_name="eventserviceteammember",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_event_members",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventserviceteammember",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="service_team_members",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="eventserviceteammember",
            name="roles",
            field=models.ManyToManyField(
                blank=True, related_name="service_team_members", to="events.eventrole"
            ),
        ),
        migrations.AddField(
            model_name="eventserviceteammember",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_memberships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="service_team",
            field=models.ManyToManyField(
                blank=True,
                related_name="events_service_team",
                through="events.EventServiceTeamMember",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventtalk",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="talks",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="eventtalk",
            name="speaker",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="event_talks",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventvenue",
            name="general_area",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="event_venues",
                to="events.arealocation",
                verbose_name="community general area",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="venues",
            field=models.ManyToManyField(
                blank=True, to="events.eventvenue", verbose_name="venues involved"
            ),
        ),
        migrations.AddField(
            model_name="eventworkshop",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workshops",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="eventworkshop",
            name="facilitators",
            field=models.ManyToManyField(
                blank=True,
                related_name="facilitated_workshops",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventworkshop",
            name="primary_facilitator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="primary_workshops",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="extraquestion",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="extra_questions",
                to="events.event",
            ),
        ),
        migrations.AddField(
            model_name="questionanswer",
            name="participant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_question_answers",
                to="events.eventparticipant",
            ),
        ),
        migrations.AddField(
            model_name="questionanswer",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="question_answers",
                to="events.extraquestion",
            ),
        ),
        migrations.AddField(
            model_name="questionchoice",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="choices",
                to="events.extraquestion",
            ),
        ),
        migrations.AddField(
            model_name="questionanswer",
            name="selected_choices",
            field=models.ManyToManyField(blank=True, to="events.questionchoice"),
        ),
        migrations.AddField(
            model_name="searchareasupportlocation",
            name="relative_area",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="relative_search_areas",
                to="events.arealocation",
            ),
        ),
        migrations.AddField(
            model_name="unitlocation",
            name="chapter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="units",
                to="events.chapterlocation",
            ),
        ),
        migrations.AddField(
            model_name="arealocation",
            name="unit",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="areas",
                to="events.unitlocation",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chapterlocation",
            unique_together={("chapter_name", "cluster")},
        ),
        migrations.AddConstraint(
            model_name="eventparticipant",
            constraint=models.UniqueConstraint(
                fields=("event", "user"), name="unique_event_user_participation"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventserviceteammember",
            unique_together={("user", "event")},
        ),
        migrations.AlterUniqueTogether(
            name="questionanswer",
            unique_together={("participant", "question")},
        ),
        migrations.AlterUniqueTogether(
            name="unitlocation",
            unique_together={("unit_name", "chapter")},
        ),
        migrations.AlterUniqueTogether(
            name="arealocation",
            unique_together={("area_name", "unit")},
        ),
    ]
