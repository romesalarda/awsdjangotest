version: '3.8'

services:
  web:
    env_file:
      - .env
    build: .
    container_name: django_app
    command: gunicorn --bind 0.0.0.0:8000 --access-logfile /var/log/django/access.log awstest.wsgi:application
    expose:
      - "8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://web:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./logs:/var/log/django  # Logs directory
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: awstestdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgresdevelopment007 # ${POSTGRES_PASSWORD} - use this and inject
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d awstestdb"] # change this
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/rsalardadevelop.co.uk-0001/fullchain.pem:/etc/letsencrypt/live/rsalardadevelop.co.uk-0001/fullchain.pem:ro
      - /etc/letsencrypt/live/rsalardadevelop.co.uk-0001/privkey.pem:/etc/letsencrypt/live/rsalardadevelop.co.uk-0001/privkey.pem:ro
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
